openapi: 3.0.0
info:
  title: Survey Management API
  version: 1.0.0
  description: API for managing surveys and questions

paths:
  /survey:
    post:
      tags:
        - Survey
      summary: Create a new survey
      operationId: createSurvey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '201':
          description: Survey created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
    get:
      tags:
        - Survey
      summary: Get all surveys
      operationId: getSurveys
      responses:
        '200':
          description: List of all surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'

  /survey/{surveyId}:
    get:
      tags:
        - Survey
      summary: Get a survey by ID
      operationId: getSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Survey found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Survey not found
    
    put:
      tags:
        - Survey
      summary: Update a survey
      description: Cannot update a survey if it is locked (locked = true)
      operationId: updateSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '200':
          description: Survey updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '403':
          description: Forbidden - survey is locked

        '404':
          description: Survey not found
    delete:
      tags:
        - Survey
      summary: Delete a survey
      description: Cannot delete a survey if it is locked (locked = true)
      operationId: deleteSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Survey deleted successfully
        '403':
          description: Forbidden - survey is locked

        '404':
          description: Survey not found
        
  /survey/{surveyId}/question/{questionId}:
    post:
      tags:
        - Survey
      summary: Assign a question to a survey
      operationId: assignQuestionToSurvey
      parameters:
        - name: surveyId
          in: path
          required: true
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Question successfully assigned to survey
        '403':
          description: Forbidden - survey or question is locked
        '404':
          description: Survey or question not found
    delete:
      tags:
        - Survey
      summary: Unassign a question from a survey
      operationId: unassignQuestionFromSurvey
      parameters:
        - name: surveyId
          in: path
          required: true
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Question successfully unassigned from survey
        '403':
          description: Forbidden - survey or question is locked
        '404':
          description: Survey or question not found
  
  /responseSurvey:
    post:
      tags:
        - ResponseSurvey
      summary: Submit a complete survey response
      operationId: submitResponseSurvey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseSurvey'
      responses:
        '201':
          description: Response survey submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSurvey'

  /responseSurvey/{responseSurveyId}:
    get:
      tags:
        - ResponseSurvey
      summary: Get a response survey by ID
      operationId: getResponseSurveyById
      parameters:
        - name: responseSurveyId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response survey found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSurvey'
        '404':
          description: Response survey not found
  

  /question:
    post:
      tags:
        - Question
      summary: Create a new question
      operationId: createQuestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Question created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: Invalid input

    get:
      tags:
        - Question
      summary: Get all questions
      operationId: getAllQuestions
      responses:
        '200':
          description: List of questions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'

  /question/{questionId}:
    get:
      tags:
        - Question
      summary: Get a question by ID
      operationId: getQuestionById
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Question found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '403':
          description: Forbidden - response is locked
        '404':
          description: Question not found

    put:
      tags:
        - Question
      summary: Update a question
      operationId: updateQuestion
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Question updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '403':
          description: Forbidden - response is locked
        '404':
          description: Question not found

    delete:
      tags:
        - Question
      summary: Delete a question
      operationId: deleteQuestion
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Question deleted
        '403':
          description: Forbidden - response is locked
        '404':
          description: Question not found
  /question/by-subject/{subject}:
    get:
      tags:
        - Question
      summary: Get questions by subject
      operationId: getQuestionsBySubject
      parameters:
        - name: subject
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of questions with the given subject
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '404':
          description: No questions found for the given subject

  /question/{questionId}/Option:
    post:
      tags:
        - Option
      summary: Create a response for a question
      operationId: createResponse
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Option'
      responses:
        '201':
          description: Response created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
    get:
      tags:
        - Option
      summary: Get all responses for a question
      operationId: getAllResponses
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of responses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Option'

  /question/{questionId}/option/{optionId}:
    get:
      tags:
        - Option
      summary: Get a specific response
      operationId: getResponseById
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
        - in: path
          name: optionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
        '404':
          description: Response not found
    put:
      tags:
        - Option
      summary: Update a response
      description: Cannot update a Response if it is locked (locked = true)
      operationId: updateResponse
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
        - in: path
          name: optionId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Option'
      responses:
        '200':
          description: Response updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
        '403':
          description: Forbidden - response is locked
        '404':
          description: Response not found
    delete:
      tags:
        - Option
      summary: Delete a response
      description: Only allowed if response is not locked
      operationId: deleteResponse
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
        - in: path
          name: optionId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response deleted
        '403':
          description: Forbidden - response is locked
        '404':
          description: Response not found

  /responseOption:
    post:
      tags:
        - ResponseOption
      summary: Submit a response option
      operationId: createResponseOption
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseOption'
      responses:
        '201':
          description: Response option successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOption'

    get:
      tags:
        - ResponseOption
      summary: Get response options by question and respondent
      operationId: getResponseOptionsByQuestionAndRespondent
      parameters:
        - name: questionId
          in: query
          required: true
          schema:
            type: integer
        - name: respondentId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of response options
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseOption'

  /responseOption/{responseOptionId}:
    get:
      tags:
        - ResponseOption
      summary: Get a response option by ID
      operationId: getResponseOptionById
      parameters:
        - name: responseOptionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response option details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOption'

    put:
      tags:
        - ResponseOption
      summary: Update a response option
      operationId: updateResponseOption
      parameters:
        - name: responseOptionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseOption'
      responses:
        '200':
          description: Response option updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOption'

    delete:
      tags:
        - ResponseOption
      summary: Delete a response option
      operationId: deleteResponseOption
      parameters:
        - name: responseOptionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successfully deleted
          
    


components:
  schemas:
    Survey:
      type: object
      properties:
        surveyId:
          type: integer
          format: int64
        organisationId:
          type: integer
          format: int64
        departmentId:
          type: integer
          format: int64
        ownerId:
          type: integer
          format: int64
        type:
          type: string
          enum: [feedback, exam]
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [draft, active, closed]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deadline:
          type: string
          format: date-time
        locked:
          type: boolean
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
      required:
        - surveyId
        - organisationId
        - departmentId
        - ownerId
        - type
        - title
        - status
        - created_at
        - updated_at

    Question:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        subject:
          type: string
        question_text:
          type: string
        question_type:
          type: string
          enum:
            - rating_scale_icons
            - free_text
            - date_picker
            - multiple_choice_text
            - multiple_choice_image
            - numeric_scale
            - yes_no
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
        score:
          type: integer
          minimum: 0
          maximum: 100
        locked:
          type: boolean
      required:
        - questionId
        - subject
        - question_text
        - question_type

    
    ResponseOption:
      type: object
      properties:
        responseOptionId:
          type: integer
          format: int64
        optionId:
          type: integer
          format: int64
        questionId:
          type: integer
          format: int64
        respondentId:
          type: integer
          format: int64
        optionText:
          type: string
        isCorrect:
          type: boolean
          description: Indique si l'option est correcte (utile pour les QCM)
        isLocked:
          type: boolean
        submittedAt:
          type: string
          format: date-time
        isSelected:
          type: boolean
        score:
          type: integer
          description: Score attribué à cette option si elle est correcte
      required:
        - responseOptionId
        - optionId
        - questionId
        - responseId
        - respondentId
        - optionText
        - isCorrect
        - score
        - submittedAt
        - isSelected

    Option:
      type: object
      properties:
        optionId:
          type: integer
          format: int64
        questionId:
          type: integer
          format: int64
        optionText:
          type: string
        isCorrect:
          type: boolean
          description: Indique si l'option est correcte (utile pour les QCM)
        score:
          type: integer
          description: Score attribué à cette option si elle est correcte
        isLocked:
          type: boolean
      required:
        - optionId
        - questionId
        - optionText
        - isCorrect
        - score
        - isLocked
        
    ResponseQuestion:
      type: object
      properties:
        questionId:
          type: integer
        text:
          type: string
        responseOptions:
          type: array
          items:
            $ref: '#/components/schemas/ResponseOption'
        score:
          type: integer
          description: Score for the question (useful for exams)
      required:
        - questionId
        - text
        - responseOptions
    
       
    ResponseSurvey:
      type: object
      properties:
        responseSurveyId:
          type: integer
          format: int64
        surveyId:
          type: integer
          format: int64
        respondentId:
          type: integer
          format: int64
        submittedAt:
          type: string
          format: date-time
        totalScore:
          type: integer
          description: Total score obtenu par le répondant (utile pour les examens)
        responseQuestions:
          type: array
          items:
            $ref: '#/components/schemas/ResponseQuestion'
      required:
        - responseSurveyId
        - surveyId
        - respondentId
        - submittedAt
        - responseOptions    

















