openapi: 3.0.0
info:
  title: Survey Management API
  version: 1.0.0
  description: API for managing surveys and questions

paths:
  /surveys:
    post:
      tags:
        - Survey
      summary: Create a new survey
      operationId: createSurvey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '201':
          description: Survey created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
    get:
      tags:
        - Survey
      summary: Get all surveys
      operationId: getSurveys
      responses:
        '200':
          description: List of all surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'

  /surveys/{surveyId}:
    get:
      tags:
        - Survey
      summary: Get a survey by ID
      operationId: getSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Survey found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Survey not found
    put:
      tags:
        - Survey
      summary: Update a survey
      description: Cannot update a survey if it is locked (locked = true)
      operationId: updateSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '200':
          description: Survey updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Survey not found
    delete:
      tags:
        - Survey
      summary: Delete a survey
      description: Cannot delete a survey if it is locked (locked = true)
      operationId: deleteSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Survey deleted successfully
        '404':
          description: Survey not found
  /surveys/{surveyId}/score/{respondentId}:
    get:
      tags:
        - Survey
      summary: Get total score for a respondent on an exam-type survey
      operationId: getTotalScoreForRespondent
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: respondentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Total score for the respondent in the survey
          content:
            application/json:
              schema:
                type: object
                properties:
                  respondentId:
                    type: string
                  surveyId:
                    type: integer
                    format: int64
                  totalScore:
                    type: integer
        '404':
          description: Survey or responses not found

  /surveys/{surveyId}/questions:
    post:
      tags:
        - Question
      summary: Add a new question to a survey
      operationId: addQuestionToSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Question added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
    get:
      tags:
        - Question
      summary: Get all questions for a survey
      operationId: getQuestionsForSurvey
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of all questions for the survey
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'

  /surveys/{surveyId}/questions/{questionId}:
    get:
      tags:
        - Question
      summary: Get a question by ID
      operationId: getQuestion
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Question found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '404':
          description: Question or survey not found
    put:
      tags:
        - Question
      summary: Update a question in a survey
      description: Cannot update a question if it is locked (locked = true)
      operationId: updateQuestion
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Question updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '404':
          description: Question or survey not found
    delete:
      tags:
        - Question
      summary: Delete a question from a survey
      description: Cannot delete a question if it is locked (locked = true)
      operationId: deleteQuestion
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Question deleted successfully
        '404':
          description: Question or survey not found
  

  /surveys/{surveyId}/questions/{questionId}/responses:
    post:
      tags:
        - Response
      summary: Create a new response for a question
      operationId: createResponse
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
      responses:
        '201':
          description: Response created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    get:
      tags:
        - Response
      summary: Get all responses for a question
      operationId: getAllResponses
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of all responses for the question
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'

  /surveys/{surveyId}/questions/{questionId}/responses/{responseId}:
    get:
      tags:
        - Response
      summary: Get a response by ID
      operationId: getResponseById
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: responseId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Response found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Response not found
    put:
      tags:
        - Response
      summary: Update a response (if not locked)
      description: Cannot update a Response if it is locked (locked = true)
      operationId: updateResponse
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: responseId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
      responses:
        '200':
          description: Response updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '403':
          description: Forbidden - response is locked
        '404':
          description: Response not found
    delete:
      tags:
        - Response
      summary: Delete a response (if not locked)
      description: Cannot delete a response if it is locked (locked = true)
      operationId: deleteResponse
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: responseId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Response deleted successfully
        '403':
          description: Forbidden - response is locked
        '404':
          description: Response not found
  /surveys/{surveyId}/submit:
    post:
      tags:
        - Response
      summary: Submit all responses for a survey
      description: Allows a respondent to submit all their responses for a specific survey.
      operationId: submitSurveyResponses
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the survey to submit responses for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                responses:
                  type: array
                  items:
                    $ref: '#/components/schemas/Response'
              required:
                - responses
      responses:
        '201':
          description: Responses successfully submitted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Responses submitted successfully"
        '400':
          description: Bad request, invalid responses or data
        '404':
          description: Survey not found
  /surveys/{surveyId}/responses/{respondentId}:
    get:
      tags:
        - Response
      summary: Get all responses submitted by a respondent for a specific survey
      description: Retrieve all responses submitted by a specific respondent for a given survey.
      operationId: getResponsesByRespondent
      parameters:
        - in: path
          name: surveyId
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the survey
        - in: path
          name: respondentId
          required: true
          schema:
            type: string
          description: ID of the respondent
      responses:
        '200':
          description: Successfully retrieved responses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'
        '404':
          description: Survey or respondent not found
        '400':
          description: Bad request due to invalid parameters

components:
  schemas:
    Survey:
      type: object
      properties:
        surveyId:
          type: integer
          format: int64
        organisationId:
          type: integer
          format: int64
        departmentId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        type:
          type: string
          enum: [feedback, exam]
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [draft, active, closed]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deadline:
          type: string
          format: date-time
        locked:
          type: boolean
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        total_score:
          type: integer
          description: Only for exam surveys
      required:
        - surveyId
        - organisationId
        - departmentId
        - userId
        - type
        - title
        - status
        - created_at
        - updated_at

    Question:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        surveyId:
          type: integer
          format: int64
        question_text:
          type: string
        question_type:
          type: string
          enum:
            - rating_scale_icons
            - free_text
            - date_picker
            - multiple_choice_text
            - multiple_choice_image
            - numeric_scale
            - yes_no
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Response'
        score:
          type: integer
          minimum: 0
          maximum: 100
        locked:
          type: boolean
      required:
        - questionId
        - surveyId
        - question_text
        - question_type

    Response:
      type: object
      properties:
        responseId:
          type: integer
          format: int64
        surveyId:
          type: integer
          format: int64
        questionId:
          type: integer
          format: int64
        respondentId:
          type: string
        text:
          type: string
        isCorrect:
          type: boolean
        isSelected:   # Champ pour savoir si cette réponse a été choisie par le répondant
          type: boolean
        score:
          type: integer
        submittedAt:
          type: string
          format: date-time
        isLocked:
          type: boolean
      required:
        - responseId
        - surveyId
        - questionId
        - respondentId
        - text
        - submittedAt